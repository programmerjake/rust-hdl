IrModule {
    path: "top",
    source_location: SourceLocation($FILE, $LINE-2, 9),
    parent: <None>,
    interface_types: [
        Input(
            IrAggregateType {
                discriminant_type: IrBitVectorType {
                    bit_count: 4,
                    signed: false,
                },
                variants: [
                    IrVariantType {
                        name: "Z",
                        discriminant: LiteralBits {
                            value: 0x0_u4,
                        },
                        fields: [],
                        flattened_fields: IrBitVectorType {
                            bit_count: 0,
                            signed: false,
                        },
                    },
                    IrVariantType {
                        name: "A",
                        discriminant: LiteralBits {
                            value: 0x5_u4,
                        },
                        fields: [],
                        flattened_fields: IrBitVectorType {
                            bit_count: 0,
                            signed: false,
                        },
                    },
                    IrVariantType {
                        name: "C",
                        discriminant: LiteralBits {
                            value: 0xa_u4,
                        },
                        fields: [],
                        flattened_fields: IrBitVectorType {
                            bit_count: 0,
                            signed: false,
                        },
                    },
                    IrVariantType {
                        name: "B",
                        discriminant: LiteralBits {
                            value: 0xf_u4,
                        },
                        fields: [],
                        flattened_fields: IrBitVectorType {
                            bit_count: 0,
                            signed: false,
                        },
                    },
                ],
                flattened_fields: IrBitVectorType {
                    bit_count: 0,
                    signed: false,
                },
            },
        ),
        Output(
            IrBitVectorType {
                bit_count: 1,
                signed: false,
            },
        ),
    ],
    interface: [
        Input(
            IrModuleInputData {
                external_value: ExternalInput {
                    value_type: IrAggregateType {
                        discriminant_type: IrBitVectorType {
                            bit_count: 4,
                            signed: false,
                        },
                        variants: [
                            IrVariantType {
                                name: "Z",
                                discriminant: LiteralBits {
                                    value: 0x0_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            IrVariantType {
                                name: "A",
                                discriminant: LiteralBits {
                                    value: 0x5_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            IrVariantType {
                                name: "C",
                                discriminant: LiteralBits {
                                    value: 0xa_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            IrVariantType {
                                name: "B",
                                discriminant: LiteralBits {
                                    value: 0xf_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                        ],
                        flattened_fields: IrBitVectorType {
                            bit_count: 0,
                            signed: false,
                        },
                    },
                },
                module_input: IrModuleInput {
                    module: "top",
                    index: 0,
                    path: "io.value",
                    value_type: IrAggregateType {
                        discriminant_type: IrBitVectorType {
                            bit_count: 4,
                            signed: false,
                        },
                        variants: [
                            IrVariantType {
                                name: "Z",
                                discriminant: LiteralBits {
                                    value: 0x0_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            IrVariantType {
                                name: "A",
                                discriminant: LiteralBits {
                                    value: 0x5_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            IrVariantType {
                                name: "C",
                                discriminant: LiteralBits {
                                    value: 0xa_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            IrVariantType {
                                name: "B",
                                discriminant: LiteralBits {
                                    value: 0xf_u4,
                                },
                                fields: [],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                        ],
                        flattened_fields: IrBitVectorType {
                            bit_count: 0,
                            signed: false,
                        },
                    },
                },
            },
        ),
        Output(
            IrModuleOutputData {
                output_read: IrOutputRead(
                    IrOutputReadData {
                        module: <None>,
                        value_type: IrBitVectorType {
                            bit_count: 1,
                            signed: false,
                        },
                        write_data: IrOutputWriteData {
                            writing_module: "top",
                            index: 1,
                        },
                    },
                ),
                wire: IrWire {
                    path: "top"."io.out",
                    source_location: SourceLocation($FILE, $LINE-2, 9),
                    value_type: IrBitVectorType {
                        bit_count: 1,
                        signed: false,
                    },
                    assigned_value: Mux {
                        condition: ExpandScope {
                            value: IsAggregateVariant {
                                aggregate_value: ShrinkScope {
                                    value: IrModuleInput {
                                        module: "top",
                                        index: 0,
                                        path: "io.value",
                                        value_type: IrAggregateType {
                                            discriminant_type: IrBitVectorType {
                                                bit_count: 4,
                                                signed: false,
                                            },
                                            variants: [
                                                IrVariantType {
                                                    name: "Z",
                                                    discriminant: LiteralBits {
                                                        value: 0x0_u4,
                                                    },
                                                    fields: [],
                                                    flattened_fields: IrBitVectorType {
                                                        bit_count: 0,
                                                        signed: false,
                                                    },
                                                },
                                                IrVariantType {
                                                    name: "A",
                                                    discriminant: LiteralBits {
                                                        value: 0x5_u4,
                                                    },
                                                    fields: [],
                                                    flattened_fields: IrBitVectorType {
                                                        bit_count: 0,
                                                        signed: false,
                                                    },
                                                },
                                                IrVariantType {
                                                    name: "C",
                                                    discriminant: LiteralBits {
                                                        value: 0xa_u4,
                                                    },
                                                    fields: [],
                                                    flattened_fields: IrBitVectorType {
                                                        bit_count: 0,
                                                        signed: false,
                                                    },
                                                },
                                                IrVariantType {
                                                    name: "B",
                                                    discriminant: LiteralBits {
                                                        value: 0xf_u4,
                                                    },
                                                    fields: [],
                                                    flattened_fields: IrBitVectorType {
                                                        bit_count: 0,
                                                        signed: false,
                                                    },
                                                },
                                            ],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                    },
                                    value_type: IrAggregateType {
                                        discriminant_type: IrBitVectorType {
                                            bit_count: 4,
                                            signed: false,
                                        },
                                        variants: [
                                            IrVariantType {
                                                name: "Z",
                                                discriminant: LiteralBits {
                                                    value: 0x0_u4,
                                                },
                                                fields: [],
                                                flattened_fields: IrBitVectorType {
                                                    bit_count: 0,
                                                    signed: false,
                                                },
                                            },
                                            IrVariantType {
                                                name: "A",
                                                discriminant: LiteralBits {
                                                    value: 0x5_u4,
                                                },
                                                fields: [],
                                                flattened_fields: IrBitVectorType {
                                                    bit_count: 0,
                                                    signed: false,
                                                },
                                            },
                                            IrVariantType {
                                                name: "C",
                                                discriminant: LiteralBits {
                                                    value: 0xa_u4,
                                                },
                                                fields: [],
                                                flattened_fields: IrBitVectorType {
                                                    bit_count: 0,
                                                    signed: false,
                                                },
                                            },
                                            IrVariantType {
                                                name: "B",
                                                discriminant: LiteralBits {
                                                    value: 0xf_u4,
                                                },
                                                fields: [],
                                                flattened_fields: IrBitVectorType {
                                                    bit_count: 0,
                                                    signed: false,
                                                },
                                            },
                                        ],
                                        flattened_fields: IrBitVectorType {
                                            bit_count: 0,
                                            signed: false,
                                        },
                                    },
                                    scope: Scope {
                                        source_location: SourceLocation($FILE, $LINE-2, 9),
                                        path: "top",
                                        ..
                                    },
                                },
                                aggregate_type: IrAggregateType {
                                    discriminant_type: IrBitVectorType {
                                        bit_count: 4,
                                        signed: false,
                                    },
                                    variants: [
                                        IrVariantType {
                                            name: "Z",
                                            discriminant: LiteralBits {
                                                value: 0x0_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                        IrVariantType {
                                            name: "A",
                                            discriminant: LiteralBits {
                                                value: 0x5_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                        IrVariantType {
                                            name: "C",
                                            discriminant: LiteralBits {
                                                value: 0xa_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                        IrVariantType {
                                            name: "B",
                                            discriminant: LiteralBits {
                                                value: 0xf_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                    ],
                                    flattened_fields: IrBitVectorType {
                                        bit_count: 0,
                                        signed: false,
                                    },
                                },
                                variant_index: 1,
                            },
                            value_type: IrBitVectorType {
                                bit_count: 1,
                                signed: false,
                            },
                            input_scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-1, 20),
                                path: "top".'1,
                                ..
                            },
                            result_scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-2, 9),
                                path: "top",
                                ..
                            },
                        },
                        value_type: IrBitVectorType {
                            bit_count: 1,
                            signed: false,
                        },
                        scope: Some(
                            Scope {
                                source_location: SourceLocation($FILE, $LINE-2, 9),
                                path: "top",
                                ..
                            },
                        ),
                        true_value: ExpandScope {
                            value: LiteralBits {
                                value: 0x1_u1,
                            },
                            value_type: IrBitVectorType {
                                bit_count: 1,
                                signed: false,
                            },
                            input_scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-1, 20),
                                path: "top".'1,
                                ..
                            },
                            result_scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-2, 9),
                                path: "top",
                                ..
                            },
                        },
                        false_value: ExpandScope {
                            value: LiteralBits {
                                value: 0x0_u1,
                            },
                            value_type: IrBitVectorType {
                                bit_count: 1,
                                signed: false,
                            },
                            input_scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-1, 20),
                                path: "top".'2,
                                ..
                            },
                            result_scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-2, 9),
                                path: "top",
                                ..
                            },
                        },
                    },
                    ..
                },
            },
        ),
    ],
    wires: {
        "io.out": IrWire {
            source_location: SourceLocation($FILE, $LINE-2, 9),
            value_type: IrBitVectorType {
                bit_count: 1,
                signed: false,
            },
            assigned_value: Mux {
                condition: ExpandScope {
                    value: IsAggregateVariant {
                        aggregate_value: ShrinkScope {
                            value: IrModuleInput {
                                module: "top",
                                index: 0,
                                path: "io.value",
                                value_type: IrAggregateType {
                                    discriminant_type: IrBitVectorType {
                                        bit_count: 4,
                                        signed: false,
                                    },
                                    variants: [
                                        IrVariantType {
                                            name: "Z",
                                            discriminant: LiteralBits {
                                                value: 0x0_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                        IrVariantType {
                                            name: "A",
                                            discriminant: LiteralBits {
                                                value: 0x5_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                        IrVariantType {
                                            name: "C",
                                            discriminant: LiteralBits {
                                                value: 0xa_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                        IrVariantType {
                                            name: "B",
                                            discriminant: LiteralBits {
                                                value: 0xf_u4,
                                            },
                                            fields: [],
                                            flattened_fields: IrBitVectorType {
                                                bit_count: 0,
                                                signed: false,
                                            },
                                        },
                                    ],
                                    flattened_fields: IrBitVectorType {
                                        bit_count: 0,
                                        signed: false,
                                    },
                                },
                            },
                            value_type: IrAggregateType {
                                discriminant_type: IrBitVectorType {
                                    bit_count: 4,
                                    signed: false,
                                },
                                variants: [
                                    IrVariantType {
                                        name: "Z",
                                        discriminant: LiteralBits {
                                            value: 0x0_u4,
                                        },
                                        fields: [],
                                        flattened_fields: IrBitVectorType {
                                            bit_count: 0,
                                            signed: false,
                                        },
                                    },
                                    IrVariantType {
                                        name: "A",
                                        discriminant: LiteralBits {
                                            value: 0x5_u4,
                                        },
                                        fields: [],
                                        flattened_fields: IrBitVectorType {
                                            bit_count: 0,
                                            signed: false,
                                        },
                                    },
                                    IrVariantType {
                                        name: "C",
                                        discriminant: LiteralBits {
                                            value: 0xa_u4,
                                        },
                                        fields: [],
                                        flattened_fields: IrBitVectorType {
                                            bit_count: 0,
                                            signed: false,
                                        },
                                    },
                                    IrVariantType {
                                        name: "B",
                                        discriminant: LiteralBits {
                                            value: 0xf_u4,
                                        },
                                        fields: [],
                                        flattened_fields: IrBitVectorType {
                                            bit_count: 0,
                                            signed: false,
                                        },
                                    },
                                ],
                                flattened_fields: IrBitVectorType {
                                    bit_count: 0,
                                    signed: false,
                                },
                            },
                            scope: Scope {
                                source_location: SourceLocation($FILE, $LINE-2, 9),
                                path: "top",
                                ..
                            },
                        },
                        aggregate_type: IrAggregateType {
                            discriminant_type: IrBitVectorType {
                                bit_count: 4,
                                signed: false,
                            },
                            variants: [
                                IrVariantType {
                                    name: "Z",
                                    discriminant: LiteralBits {
                                        value: 0x0_u4,
                                    },
                                    fields: [],
                                    flattened_fields: IrBitVectorType {
                                        bit_count: 0,
                                        signed: false,
                                    },
                                },
                                IrVariantType {
                                    name: "A",
                                    discriminant: LiteralBits {
                                        value: 0x5_u4,
                                    },
                                    fields: [],
                                    flattened_fields: IrBitVectorType {
                                        bit_count: 0,
                                        signed: false,
                                    },
                                },
                                IrVariantType {
                                    name: "C",
                                    discriminant: LiteralBits {
                                        value: 0xa_u4,
                                    },
                                    fields: [],
                                    flattened_fields: IrBitVectorType {
                                        bit_count: 0,
                                        signed: false,
                                    },
                                },
                                IrVariantType {
                                    name: "B",
                                    discriminant: LiteralBits {
                                        value: 0xf_u4,
                                    },
                                    fields: [],
                                    flattened_fields: IrBitVectorType {
                                        bit_count: 0,
                                        signed: false,
                                    },
                                },
                            ],
                            flattened_fields: IrBitVectorType {
                                bit_count: 0,
                                signed: false,
                            },
                        },
                        variant_index: 1,
                    },
                    value_type: IrBitVectorType {
                        bit_count: 1,
                        signed: false,
                    },
                    input_scope: Scope {
                        source_location: SourceLocation($FILE, $LINE-1, 20),
                        path: "top".'1,
                        ..
                    },
                    result_scope: Scope {
                        source_location: SourceLocation($FILE, $LINE-2, 9),
                        path: "top",
                        ..
                    },
                },
                value_type: IrBitVectorType {
                    bit_count: 1,
                    signed: false,
                },
                scope: Some(
                    Scope {
                        source_location: SourceLocation($FILE, $LINE-2, 9),
                        path: "top",
                        ..
                    },
                ),
                true_value: ExpandScope {
                    value: LiteralBits {
                        value: 0x1_u1,
                    },
                    value_type: IrBitVectorType {
                        bit_count: 1,
                        signed: false,
                    },
                    input_scope: Scope {
                        source_location: SourceLocation($FILE, $LINE-1, 20),
                        path: "top".'1,
                        ..
                    },
                    result_scope: Scope {
                        source_location: SourceLocation($FILE, $LINE-2, 9),
                        path: "top",
                        ..
                    },
                },
                false_value: ExpandScope {
                    value: LiteralBits {
                        value: 0x0_u1,
                    },
                    value_type: IrBitVectorType {
                        bit_count: 1,
                        signed: false,
                    },
                    input_scope: Scope {
                        source_location: SourceLocation($FILE, $LINE-1, 20),
                        path: "top".'2,
                        ..
                    },
                    result_scope: Scope {
                        source_location: SourceLocation($FILE, $LINE-2, 9),
                        path: "top",
                        ..
                    },
                },
            },
            ..
        },
    },
    registers: {},
    ..
}